{"ast":null,"code":"var _jsxFileName = \"/home/alexalgr/Desktop/FullStack_1/Chapter_1/Task_1.6-1.14/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = props => {\n  if (props.good + props.neutral + props.bad === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"asdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", props.good, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this), \"neutral \", props.neutral, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this), \"bad \", props.bad, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this), \"all \", props.good + props.neutral + props.bad, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), \"average \", (props.good - props.bad) / (props.good + props.neutral + props.bad), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), \"positive \", props.good / (props.good + props.neutral + props.bad) * 100, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nconst App = () => {\n  _s();\n  const [counter1, setCounter1] = useState(0);\n  const [counter2, setCounter2] = useState(0);\n  const [counter3, setCounter3] = useState(0);\n  const increaseByOne1 = () => setCounter1(counter1 + 1);\n  const increaseByOne2 = () => setCounter2(counter2 + 1);\n  const increaseByOne3 = () => setCounter3(counter3 + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseByOne1,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseByOne2,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseByOne3,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: counter1,\n      neutral: counter2,\n      bad: counter3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9TinmaJRWnmmMpI6YHLUSfrWqD0=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Statistics","props","good","neutral","bad","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","counter1","setCounter1","counter2","setCounter2","counter3","setCounter3","increaseByOne1","increaseByOne2","increaseByOne3","onClick","_c2","$RefreshReg$"],"sources":["/home/alexalgr/Desktop/FullStack_1/Chapter_1/Task_1.6-1.14/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\n\nconst Statistics = (props) => {\n  if (props.good + props.neutral + props.bad === 0) {\n    return (\n      <p>asdf</p>\n      \n    )\n  }\n  return (\n    <div>\n    <p>good {props.good} \n    <br/>neutral {props.neutral} \n    <br/>bad {props.bad}\n    <br/>all {props.good + props.neutral + props.bad}\n    <br/>average {(props.good - props.bad) / (props.good + props.neutral + props.bad)}\n    <br/>positive {props.good / (props.good + props.neutral + props.bad) * 100} %</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ counter1, setCounter1 ] = useState(0)\n  const [ counter2, setCounter2 ] = useState(0)\n  const [ counter3, setCounter3 ] = useState(0)\n\n  const increaseByOne1 = () => setCounter1(counter1 + 1)\n  const increaseByOne2 = () => setCounter2(counter2 + 1)\n  const increaseByOne3 = () => setCounter3(counter3 + 1)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={increaseByOne1}>\n        good\n      </button>\n      <button onClick={increaseByOne2}>\n        neutral\n      </button>\n      <button onClick={increaseByOne3}>\n        bad\n      </button>\n      <h1>statistics</h1>\n\n      <Statistics good={counter1} neutral={counter2} bad={counter3}/>\n\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}