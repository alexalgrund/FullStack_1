[{"/home/alexalgr/Desktop/FullStack_1/Chapter_1/Task_1.1-1.2/src/index.js":"1","/home/alexalgr/Desktop/FullStack_1/Chapter_1/Task_1.1-1.2/src/App.js":"2","/home/alexalgr/Desktop/FullStack_1/Chapter_1/Task_1.3-1.5/src/index.js":"3","/home/alexalgr/Desktop/FullStack_1/Chapter_1/Task_1.3-1.5/src/App.js":"4","/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.6-2.10/src/index.js":"5","/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.6-2.10/src/App.js":"6","/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.6-2.10/src/components/Note.js":"7","/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.11/src/index.js":"8","/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.11/src/App.js":"9","/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.11/src/components/Note.js":"10"},{"size":160,"mtime":1681844146710,"results":"11","hashOfConfig":"12"},{"size":1114,"mtime":1681942898249,"results":"13","hashOfConfig":"12"},{"size":160,"mtime":1681844146710,"results":"14","hashOfConfig":"15"},{"size":1311,"mtime":1682003233592,"results":"16","hashOfConfig":"15"},{"size":453,"mtime":1684175463782,"results":"17","hashOfConfig":"18"},{"size":1794,"mtime":1684180028549,"results":"19","hashOfConfig":"18"},{"size":117,"mtime":1684179210452,"results":"20","hashOfConfig":"18"},{"size":277,"mtime":1684343400493,"results":"21","hashOfConfig":"22"},{"size":2056,"mtime":1684343913050,"results":"23","hashOfConfig":"22"},{"size":117,"mtime":1684342384997,"results":"24","hashOfConfig":"22"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o0ayzc",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cb3dhc",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j2go4z",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5n373h",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alexalgr/Desktop/FullStack_1/Chapter_1/Task_1.1-1.2/src/index.js",[],[],"/home/alexalgr/Desktop/FullStack_1/Chapter_1/Task_1.1-1.2/src/App.js",[],[],"/home/alexalgr/Desktop/FullStack_1/Chapter_1/Task_1.3-1.5/src/index.js",[],[],"/home/alexalgr/Desktop/FullStack_1/Chapter_1/Task_1.3-1.5/src/App.js",[],[],"/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.6-2.10/src/index.js",[],[],"/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.6-2.10/src/App.js",["57"],[],"import { useState } from 'react'\nimport Note from './components/Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState()\n  const [newFilter, setNewFilter] = useState()\n  const [newNumber, setNewNumber] = useState()\n\n  const result = notes.map(note => note.name)\n\n  const addNote = (event) => {\n    if (result.includes(newNote) === false) {\n      event.preventDefault()\n      const noteObject = {name: newNote, number: newNumber}\n      setNotes(notes.concat(noteObject))\n      setNewNote('')\n      setNewNumber('')\n    } else {\n      event.preventDefault()\n      alert(`${newNote} is already added to phonebook`)\n    }\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <label for=\"fname\">filter shown with</label>\n      <input id=\"filterText\"\n      onChange={handleFilterChange}/>\n      <h1>Add a new</h1>\n      <form onSubmit={addNote}>\n      <label for=\"fname\">Name:</label>\n      <input value={newNote}\n      onChange={handleNoteChange}/>\n      <p></p>\n      <label for=\"fname\">Number:</label>\n      <input value={newNumber}\n      onChange={handleNumberChange}/>\n<p></p>\n        <button type=\"submit\">add</button>\n      </form>\n      <h1>Numbers</h1>\n      {notes.filter(note => note.name.includes(document.getElementById(\"filterText\").value)).map(note =>\n       <Note key={note.id} name={note.name} number={note.number} />\n      )}\n    </div>\n  )\n}\n\nexport default App ","/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.6-2.10/src/components/Note.js",[],[],[],"/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.11/src/index.js",[],[],"/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.11/src/App.js",["58"],[],"/home/alexalgr/Desktop/FullStack_1/Chapter_2/Task_2.11/src/components/Note.js",[],[],{"ruleId":"59","severity":1,"message":"60","line":7,"column":10,"nodeType":"61","messageId":"62","endLine":7,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":8,"column":10,"nodeType":"61","messageId":"62","endLine":8,"endColumn":19},"no-unused-vars","'newFilter' is assigned a value but never used.","Identifier","unusedVar"]